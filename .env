# ==========================================
# Discord Bot Configuration
# ==========================================

# --- Required Settings ---

# Your Discord Bot Token (KEEP THIS SECRET!)
# Obtain this from the Discord Developer Portal (Bot section).
DISCORD_BOT_TOKEN=YOUR_BOT_TOKEN_HERE

# The absolute or relative path to the root directory the bot can browse.
# Example (Linux/macOS): /srv/shareable_files
# Example (Windows): C:/Users/Public/SharedFiles
# Relative paths are relative to where you run `node index.js`.
FILE_BROWSE_ROOT=/path/to/your/files

# --- Optional Settings for Oversized File Handling & Auto-Deletion ---
# If these are NOT set, the features for handling files > 25MB will be disabled.

# The absolute or relative path where folders containing oversized files/ZIPs
# will be temporarily created (copied/moved).
# Auto-deletion (after 2 hours) ONLY works if this is set and valid.
# The bot needs write permissions here. It will create subdirectories.
# Example (Linux/macOS): /var/www/html/discord_temp_files
# Example (Windows): C:/inetpub/wwwroot/discord_temp_files
FILE_LIMIT_FOLDER=/path/to/temp/oversized/storage

# The public-facing base URL corresponding to the FILE_LIMIT_FOLDER path.
# This is used to generate a link for users to access oversized items.
# It should point to the *parent* directory where the bot creates user/path subfolders.
# Example: https://your-domain.com/discord_temp_files
# If FILE_LIMIT_FOLDER is set but this is not, files are copied/moved, but users get no link.
FILE_SERV_URL=https://your-domain.com/base_url_for_limit_folder